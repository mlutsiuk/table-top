datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider  = "prisma-json-types-generator"
  namespace = "PrismaJson"
}

model User {
  id         String     @id @default(uuid()) @map("_id")
  email      String     @unique
  name       String
  createdAt  DateTime   @default(now())
  masterMode Boolean    @default(false)
  campaigns  Campaign[]
  players    Player[]
}

model Campaign {
  id             String         @id @default(uuid()) @map("_id")
  title          String
  createdAt      DateTime       @default(now())
  /// [FundScheme]
  fundScheme     Json           @default("[]")
  masterId       String
  master         User           @relation(fields: [masterId], references: [id])
  players        Player[]
  scheetSchemas  SheetSchema[]
  itemCategories ItemCategory[]
}

model Player {
  id         String   @id @default(uuid()) @map("_id")
  name       String
  funds      Int      @default(0)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  campaignId String
  campaign   Campaign @relation(fields: [campaignId], references: [id])
}

model SheetSchema {
  id           String        @id @default(uuid()) @map("_id")
  title        String
  structure    Json
  campaignId   String
  campaign     Campaign      @relation(fields: [campaignId], references: [id])
  playerSheets PlayerSheet[]
}

model PlayerSheet {
  id       String      @id @default(uuid()) @map("_id")
  values   Json
  schemaId String
  schema   SheetSchema @relation(fields: [schemaId], references: [id])
}

model ItemCategory {
  id         String   @id @default(uuid()) @map("_id")
  title      String
  campaignId String
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  items      Item[]
}

model Item {
  id         String       @id @default(uuid()) @map("_id")
  title      String
  categoryId String
  category   ItemCategory @relation(fields: [categoryId], references: [id])
}
